package com.kylecorry.andromeda.compression

import org.junit.jupiter.api.Assertions.*
import org.junit.jupiter.api.Test
import kotlin.io.encoding.Base64

class ZlibTest {

    @Test
    fun canDecrypt(){
        val data = Base64.decode("aN7sWG1v2zYQ/gX7D4Q/baht8U2kBBQBHMdO3cYvtZ12nWcYqsM5Ghy5kJW2+/e7o0SHdpy0yIa1wxbkTPHh8XjkHR9SEoxQIjjhnAhBOJNESMKjkIiQ8BiaFJFKEaEJU4IREWGpiYgJi6gkkoKWColkUGpKJJhhoSZSwD8YlKASUsBBJZYR2CIhg0GePw9GeZoVk2WyTrNVMNhk5uQE0O4mK9ATSsagsVlOTDELRmfdYGo+F0HvJlmZ07Jol0VvHvw8fP+7WRbQ2yILxnA6aKGqw8SEX4epSb+uCQ+9Oqgrrwra2quCcuRVY5g4Vk9OrP+tPE3WjdPN+qo/xcVDRYth1SoG0/TGbAfm03hzk2SjSaNXwBosoV3y0lDMZByire3SwGpAjQXt5MMLk66uC8JpJIMzU7Y1pGBBd52stuAzZ1rZBTw93XyeNRiPFGlozSBKsbL95ra5m64NJ6z0BoFBcmOCXqf7+uLymT+BoHStla3WhtBgUpibN1BO//hgbD/0Ik8/FJvczv002RqEj5rqZMvNFYb6bZq1sm26q3fTfFu0r5McLO8bxRxEFy+SSoGHYTC5fV/g+NP81lhHdt6A5aviejvTISXfUriOiM19LUkYKitRFBMNSclF2WYFsDCSO30sUVyfL4mzgzacKMj9WId2LF+U0rZNg33rRzWObQM8AjtWF3DUdXq7ftVzDBvaYhXu/N75UfmFJbb7JeL4jOLPFUtcH9fmxK6P18/6668P8Arq8Iju1vJbx96P/2G80E83H40cqss6+u2wMOSwWwGX8V2eoC29H3MrwLs2t4CxnbhYHRNGwfAuqJ64YDjZdcLnA7GL7Ov4CVYlxUMJG1UBvbcwB+MfJoIvuDBH8btEm5+cMCqiMH6EQhU9RqGC+/QpFCMNhYdbSZ+K+vTJ6T59vnv35tVl+1nF9U9lzgMrTyLN6N9KmnbjhOFevmBOsZj9baS50/dIE3FG4VbgkvhR1oRNhHi5857Gmn6ySxXvsaZjNt/h3TP6AILtWEZHWMbaofSuX7Xprc1KBN7xVFl+96yp/iJrYp+vYM1DUnTyfbCmlxAPseajmV+x5j3c2aUUWFNLHWqfNDnfI81YeaQpeUWa8d6dk8K1sqE4uiSo7bNHmmyfNF+8G41fnz176Ea8x6INpuTXE+mXLD+FWSV7ErMeyYd/UnhIy+sovyMAS1zYxuTdZkFig6uj0+fVpvSJ4zFxdtCGE8RjGHd3Ulfk6upuH5SvinKPWH1dV7p89a+tfl7b6yASCZSyIj03N/saCmO40p/bjowr/JAw3VXT2Xc20EcsUeyY1lZYkREj3zr2u/g7DvGEV/GxJKqwrnY54DA7T0esqOvWE3W52OWKxVmp75O6tffATc6d7veu/T5ZVwesfyjv8eeRVx0bO3cbfCRf/dj5co9XH8t7GR/FvTybl7y0uc2utjNKkELKX0bYPDhvT/AbCdLK+Wg6mUna5ByvIo2INlnEY8ipsEmlhskgpChjGiHGFMe3ewaNkcDjrwnOhpGFBLDzPLhAg/dGdIR13hmWXNU3yfY2L7++WGA0Hr5sT4K3r6Y/lo+z2qB1tmBxJBaX0/7il01mFiwa1Opg4xyb4Wcx2OTF9aJ1Y/J0mWRWu1Y/a00v+7Pa2fHWyehFZzzsnYGB8QQxWqsroSMmdJPWeRw1eQjR5HCozOf10bjX74Cx89yY7FO6vK7VaZPO65eD3hSGMCvALcS0DAWPecjiWAphuw5fdtrT3nAwq03zJNt+NPnWLPomXyZA7DXQaI1b/c60M57Vuska2jpA8umvP2SrWh0CCX841D0tO60UlQ7b23BK5skax0iv0iSr1Rs6PNDBj19m0U2W6ANYiGM4LX2Fi6RIi9srsxj+thjm6SrN9ubcN4WBjpAC8/lPX04z5aUZbypYHE7QqYiHggFdNnUsKkDBLbwENLOQ5gzuSQhRyngFUa7+z7L/Wpb9KcAAFoczVw==")
        val expected = "31 0 32 22 33 214 34 285 35 290 36 466 37 1631 38 1637 39 1804 40 2965 41 2970 42 3157 43 4333 44 4500 45 4948 46 5114 <</PrintScaling/None>><</Font 33 0 R/ProcSet[/PDF/Text/ImageB/ImageC/ImageI]/XObject<</Image_11 22 0 R/Image_13 23 0 R/Image_15 24 0 R/Image_17 25 0 R/Image_3 26 0 R/Image_5 27 0 R/Image_7 28 0 R/Image_9 29 0 R>>>><</Arial-BoldMT 36 0 R/ArialMT 39 0 R/TimesNewRomanPS-ItalicMT 42 0 R>>91495<</Ascent 1491/CapHeight 2084/Descent -431/Flags 262176/FontBBox[-1286 -771 4096 2084]/FontFile2 19 0 R/FontName/IEFQLU+Arial-BoldMT/ItalicAngle 0/StemV 0/Type/FontDescriptor>><</BaseFont/IEFQLU+Arial-BoldMT/Encoding/WinAnsiEncoding/FirstChar 0/FontDescriptor 35 0 R/LastChar 255/Subtype/TrueType/Type/Font/Widths[750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 278 333 474 556 556 889 722 238 333 333 389 584 278 333 278 278 556 556 556 556 556 556 556 556 556 556 333 333 584 584 584 611 975 722 722 722 722 667 611 778 722 278 556 722 611 833 722 778 667 778 722 667 611 722 667 944 667 667 611 333 278 333 584 556 333 556 611 556 611 556 333 611 611 278 278 556 278 889 611 611 611 611 389 556 333 611 556 778 556 556 500 389 280 389 584 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 278 333 556 556 556 556 280 556 333 737 370 556 584 333 737 552 400 549 333 333 333 576 556 333 333 333 365 556 834 834 834 611 722 722 722 722 722 722 1000 722 667 667 667 667 278 278 278 278 722 722 778 778 778 778 778 584 778 722 722 722 722 667 667 611 556 556 556 556 556 556 889 556 556 556 556 556 278 278 278 278 611 611 611 611 611 611 611 549 611 611 611 611 611 556 611 556]>>103859<</Ascent 1491/CapHeight 2060/Descent -431/Flags 32/FontBBox[-1361 -665 4096 2060]/FontFile2 20 0 R/FontName/YYVKUC+ArialMT/ItalicAngle 0/StemV 0/Type/FontDescriptor>><</BaseFont/YYVKUC+ArialMT/Encoding/WinAnsiEncoding/FirstChar 0/FontDescriptor 38 0 R/LastChar 255/Subtype/TrueType/Type/Font/Widths[750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 278 278 355 556 556 889 667 191 333 333 389 584 278 333 278 278 556 556 556 556 556 556 556 556 556 556 278 278 584 584 584 556 1015 667 667 722 722 667 611 778 722 278 500 667 556 833 722 778 667 778 722 667 611 722 667 944 667 667 611 278 278 278 469 556 333 556 556 500 556 556 278 556 556 222 222 500 222 833 556 556 556 556 333 500 278 556 500 722 500 500 500 334 260 334 584 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 750 278 333 556 556 556 556 260 556 333 737 370 556 584 333 737 552 400 549 333 333 333 576 537 333 333 333 365 556 834 834 834 611 667 667 667 667 667 667 1000 722 667 667 667 667 278 278 278 278 722 722 778 778 778 778 778 584 778 722 722 722 722 667 667 611 556 556 556 556 556 556 889 500 556 556 556 556 278 278 278 278 556 556 556 556 556 556 556 549 611 556 556 556 556 500 556 500]>>74757<</Ascent 1422/CapHeight 2096/Descent -442/Flags 96/FontBBox[-1019 -628 2730 2096]/FontFile2 21 0 R/FontName/HYPRQD+TimesNewRomanPS-ItalicMT/ItalicAngle -164/StemV 0/Type/FontDescriptor>><</BaseFont/HYPRQD+TimesNewRomanPS-ItalicMT/Encoding/WinAnsiEncoding/FirstChar 0/FontDescriptor 41 0 R/LastChar 255/Subtype/TrueType/Type/Font/Widths[778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 250 333 420 500 500 833 778 214 333 333 500 675 250 333 250 278 500 500 500 500 500 500 500 500 500 500 333 333 675 675 675 500 920 611 611 667 722 611 611 722 722 333 444 667 556 833 667 722 611 722 611 500 556 722 611 833 611 556 556 389 278 389 422 500 333 500 500 444 500 444 278 500 500 278 278 444 278 722 500 500 500 500 389 389 278 500 444 667 444 444 389 400 275 400 541 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 778 250 389 500 500 500 500 275 500 333 760 276 500 675 333 760 500 400 549 300 300 333 576 523 250 333 300 310 500 750 750 750 500 611 611 611 611 611 611 889 667 611 611 611 611 333 333 333 333 722 667 722 722 722 722 722 675 722 722 722 722 722 556 611 500 500 500 500 500 500 500 667 444 444 444 444 444 278 278 278 278 500 500 500 500 500 500 500 549 500 500 500 500 500 444 500 444]>><</Bounds[0 1 0 0 1 0 1 1]/GCS 44 0 R/GPTS[40.22015 -80.18299 45.04711 -80.60117 45.11626 -71.04832 40.27858 -71.3442]/LPTS[0 1 0 0 1 0 1 1]/Subtype/GEO/Type/Measure>><</Type/PROJCS/WKT(PROJCS[\"NAD_1983_UTM_Zone_18N\",GEOGCS[\"GCS_North_American_1983\",DATUM[\"D_North_American_1983\",SPHEROID[\"GRS_1980\",6378137.0,298.257222101]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easti\\\rng\",500000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-75.0],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0]])>><</Bounds[0 1 0 0 1 0 1 1]/GCS 46 0 R/GPTS[42.69942 -75.82531 42.793 -75.82655 42.79371 -75.72134 42.70012 -75.72026]/LPTS[0 1 0 0 1 0 1 1]/Subtype/GEO/Type/Measure>><</Type/PROJCS/WKT(PROJCS[\"NAD_1983_UTM_Zone_18N\",GEOGCS[\"GCS_North_American_1983\",DATUM[\"D_North_American_1983\",SPHEROID[\"GRS_1980\",6378137.0,298.257222101]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easti\\\rng\",500000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",-75.0],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0]])>>"
        val decoded = Zlib.decompress(data)
        assertEquals(expected, decoded.decodeToString())
    }

}